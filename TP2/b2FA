--------------------------------------------------------------------------------
-- User-annotated source: /root/orga_compu/TP2/benchmarks-tp2/benchmark-b2.S
--------------------------------------------------------------------------------
Ir  I1mr ILmr Dr  D1mr DLmr Dw D1mw DLmw 

-- line 10 ----------------------------------------
  .    .    .   .    .    .  .    .    .  
  .    .    .   .    .    .  .    .    .  	.text
  .    .    .   .    .    .  .    .    .  	.align	2
  .    .    .   .    .    .  .    .    .  
  .    .    .   .    .    .  .    .    .  	.globl	main
  .    .    .   .    .    .  .    .    .  	.ent	main
  .    .    .   .    .    .  .    .    .  main:
  .    .    .   .    .    .  .    .    .  	.set	noreorder
  3    1    1   0    0    0  0    0    0  	.cpload	t9
  .    .    .   .    .    .  .    .    .  	.set	nomacro
  1    0    0   0    0    0  0    0    0  	addiu	sp, sp, -24
  1    1    1   0    0    0  1    1    1  	sw	fp, 20(sp)
  1    0    0   0    0    0  0    0    0  	move	fp, sp
  1    0    0   0    0    0  1    1    1  	.cprestore	0
  .    .    .   .    .    .  .    .    .  
  2    1    1   1    1    1  0    0    0  	la	t0, aligned
  1    0    0   0    0    0  0    0    0  	li	t1, 100
  .    .    .   .    .    .  .    .    .  	.align	20
100    1    1 100  100  100  0    0    0  loop:	lw	t2, 0(t0)
100    0    0   0    0    0  0    0    0  	addu	t0, t0, 16 
100    0    0   0    0    0  0    0    0  	subu	t1, t1, 1
100    0    0   0    0    0  0    0    0  	bnez	t1, loop
  .    .    .   .    .    .  .    .    .  
  .    .    .   .    .    .  .    .    .  	# Destruimos el stack frame antes de retornar de main().
  .    .    .   .    .    .  .    .    .  	#
100    1    1   0    0    0  0    0    0  	move	sp, fp
  1    0    0   1    1    1  0    0    0  	lw	fp, 20(sp)
  1    0    0   0    0    0  0    0    0  	addiu	sp, sp, 24
  .    .    .   .    .    .  .    .    .  
  .    .    .   .    .    .  .    .    .  	# Para volver al sistema operativo cargamos un c√≥digo de retorno nulo.
  .    .    .   .    .    .  .    .    .  	#
  1    0    0   0    0    0  0    0    0  	move	v0, zero
  1    1    1   0    0    0  0    0    0  	jr	ra
  .    .    .   .    .    .  .    .    .  	.end	main
  .    .    .   .    .    .  .    .    .  
  .    .    .   .    .    .  .    .    .  	.rdata
  .    .    .   .    .    .  .    .    .  	.align	20
  .    .    .   .    .    .  .    .    .  aligned:
  .    .    .   .    .    .  .    .    .  	.skip	8192

--------------------------------------------------------------------------------
Ir  I1mr ILmr Dr  D1mr DLmr Dw D1mw DLmw 
--------------------------------------------------------------------------------
514    6    6 102  102  102  2    2    2  events annotated

La interpretacion es muy similar al benchmark1-FullAssociative. Su principal diferencia radica en el lw del loop. En este caso no se cumple el Principio de Localidad. Es decir, que de todos los datos que se traen en cada pagina, solo se utiliza el primero. Esto se debe a que en el loop (suponiendo que leemos un vector) al sumarle 16, estamos pidiendo 4 posiciones mas adelante, y en la pagina se trajeron solo 3 datos mas adelantes. Por lo tanto, nunca se cachea un dato que necesitaremos mas adelante en el loop.
Al igual que en el benchmark1-FullAssociative, la cache se llena, se pisan los datos anteriores al loop, y por lo tanto en el ultimo lw hay que ir a buscar el dato 20(sp) nuevamente.
